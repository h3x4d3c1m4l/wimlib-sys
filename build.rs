extern crate bindgen;

use std::env;
use std::path::PathBuf;

fn main() {
    // Tell cargo to tell rustc to link the system libwim
    // shared library.
    println!("cargo:rustc-link-lib=wim");

    // The bindgen::Builder is the main entry point
    // to bindgen, and lets you build up options for
    // the resulting bindings.
    let bindings = bindgen::Builder::default()
        // The input header we would like to generate
        // bindings for.
        .header("wrapper.h")
        // whitelist functions
        // list of functions that should be included
        .whitelist_function("wimlib_add_empty_image")
        .whitelist_function("wimlib_add_image")
        .whitelist_function("wimlib_add_image_multisource")
        .whitelist_function("wimlib_add_tree")
        .whitelist_function("wimlib_compress")
        .whitelist_function("wimlib_create_compressor")
        .whitelist_function("wimlib_create_decompressor")
        .whitelist_function("wimlib_create_new_wim")
        .whitelist_function("wimlib_decompress")
        .whitelist_function("wimlib_delete_image")
        .whitelist_function("wimlib_delete_path")
        .whitelist_function("wimlib_export_image")
        .whitelist_function("wimlib_extract_image")
        .whitelist_function("wimlib_extract_image_from_pipe")
        .whitelist_function("wimlib_extract_image_from_pipe_with_progress")
        .whitelist_function("wimlib_extract_pathlist")
        .whitelist_function("wimlib_extract_paths")
        .whitelist_function("wimlib_extract_xml_data")
        .whitelist_function("wimlib_free")
        .whitelist_function("wimlib_free_compressor")
        .whitelist_function("wimlib_free_decompressor")
        .whitelist_function("wimlib_get_compression_type_string")
        .whitelist_function("wimlib_get_compressor_needed_memory")
        .whitelist_function("wimlib_get_error_string")
        .whitelist_function("wimlib_get_image_description")
        .whitelist_function("wimlib_get_image_name")
        .whitelist_function("wimlib_get_image_property")
        .whitelist_function("wimlib_get_version")
        .whitelist_function("wimlib_get_version_string")
        .whitelist_function("wimlib_get_wim_info")
        .whitelist_function("wimlib_get_xml_data")
        .whitelist_function("wimlib_global_cleanup")
        .whitelist_function("wimlib_global_init")
        .whitelist_function("wimlib_image_name_in_use")
        .whitelist_function("wimlib_iterate_dir_tree")
        .whitelist_function("wimlib_iterate_lookup_table")
        .whitelist_function("wimlib_join")
        .whitelist_function("wimlib_join_with_progress")
        .whitelist_function("wimlib_mount_image")
        .whitelist_function("wimlib_open_wim")
        .whitelist_function("wimlib_open_wim_with_progress")
        .whitelist_function("wimlib_overwrite")
        .whitelist_function("wimlib_print_available_images")
        .whitelist_function("wimlib_print_header")
        .whitelist_function("wimlib_reference_resource_files")
        .whitelist_function("wimlib_reference_resources")
        .whitelist_function("wimlib_reference_template_image")
        .whitelist_function("wimlib_register_progress_function")
        .whitelist_function("wimlib_rename_path")
        .whitelist_function("wimlib_resolve_image")
        .whitelist_function("wimlib_set_default_compression_level")
        .whitelist_function("wimlib_set_error_file")
        .whitelist_function("wimlib_set_error_file_by_name")
        .whitelist_function("wimlib_set_image_descripton")
        .whitelist_function("wimlib_set_image_flags")
        .whitelist_function("wimlib_set_image_name")
        .whitelist_function("wimlib_set_image_property")
        .whitelist_function("wimlib_set_memory_allocator")
        .whitelist_function("wimlib_set_output_chunk_size")
        .whitelist_function("wimlib_set_output_compression_type")
        .whitelist_function("wimlib_set_output_pack_chunk_size")
        .whitelist_function("wimlib_set_output_pack_compression_type")
        .whitelist_function("wimlib_set_print_errors")
        .whitelist_function("wimlib_set_wim_info")
        .whitelist_function("wimlib_split")
        .whitelist_function("wimlib_unmount_image")
        .whitelist_function("wimlib_unmount_image_with_progress")
        .whitelist_function("wimlib_update_image")
        .whitelist_function("wimlib_verify_wim")
        .whitelist_function("wimlib_write")
        .whitelist_function("wimlib_write_to_fd")
        // whitelist define'd consts
        .whitelist_var("WIMLIB_CHANGE_READONLY_FLAG")
        .whitelist_var("WIMLIB_CHANGE_GUID")
        .whitelist_var("WIMLIB_CHANGE_BOOT_INDEX")
        .whitelist_var("WIMLIB_CHANGE_RPFIX_FLAG")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_READONLY")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_HIDDEN")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_SYSTEM")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_DIRECTORY")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_ARCHIVE")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_DEVICE")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_NORMAL")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_TEMPORARY")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_SPARSE_FILE")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_REPARSE_POINT")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_COMPRESSED")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_OFFLINE")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_NOT_CONTENT_INDEXED")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_ENCRYPTED")
        .whitelist_var("WIMLIB_FILE_ATTRIBUTE_VIRTUAL")
        .whitelist_var("WIMLIB_REPARSE_TAG_RESERVED_ZERO")
        .whitelist_var("WIMLIB_REPARSE_TAG_RESERVED_ONE")
        .whitelist_var("WIMLIB_REPARSE_TAG_MOUNT_POINT")
        .whitelist_var("WIMLIB_REPARSE_TAG_HSM")
        .whitelist_var("WIMLIB_REPARSE_TAG_HSM2")
        .whitelist_var("WIMLIB_REPARSE_TAG_DRIVER_EXTENDER")
        .whitelist_var("WIMLIB_REPARSE_TAG_SIS")
        .whitelist_var("WIMLIB_REPARSE_TAG_DFS")
        .whitelist_var("WIMLIB_REPARSE_TAG_DFSR")
        .whitelist_var("WIMLIB_REPARSE_TAG_FILTER_MANAGER")
        .whitelist_var("WIMLIB_REPARSE_TAG_WOF")
        .whitelist_var("WIMLIB_REPARSE_TAG_SYMLINK")
        .whitelist_var("WIMLIB_ITERATE_DIR_TREE_FLAG_RECURSIVE")
        .whitelist_var("WIMLIB_ITERATE_DIR_TREE_FLAG_CHILDREN")
        .whitelist_var("WIMLIB_ITERATE_DIR_TREE_FLAG_RESOURCES_NEEDED")
        .whitelist_var("WIMLIB_ADD_FLAG_NTFS")
        .whitelist_var("WIMLIB_ADD_FLAG_DEREFERENCE")
        .whitelist_var("WIMLIB_ADD_FLAG_VERBOSE")
        .whitelist_var("WIMLIB_ADD_FLAG_BOOT")
        .whitelist_var("WIMLIB_ADD_FLAG_UNIX_DATA")
        .whitelist_var("WIMLIB_ADD_FLAG_NO_ACLS")
        .whitelist_var("WIMLIB_ADD_FLAG_STRICT_ACLS")
        .whitelist_var("WIMLIB_ADD_FLAG_EXCLUDE_VERBOSE")
        .whitelist_var("WIMLIB_ADD_FLAG_RPFIX")
        .whitelist_var("WIMLIB_ADD_FLAG_NORPFIX")
        .whitelist_var("WIMLIB_ADD_FLAG_NO_UNSUPPORTED_EXCLUDE")
        .whitelist_var("WIMLIB_ADD_FLAG_WINCONFIG")
        .whitelist_var("WIMLIB_ADD_FLAG_WIMBOOT")
        .whitelist_var("WIMLIB_ADD_FLAG_NO_REPLACE")
        .whitelist_var("WIMLIB_ADD_FLAG_TEST_FILE_EXCLUSION")
        .whitelist_var("WIMLIB_ADD_FLAG_SNAPSHOT")
        .whitelist_var("WIMLIB_ADD_FLAG_FILE_PATHS_UNNEEDED")
        .whitelist_var("WIMLIB_DELETE_FLAG_FORCE")
        .whitelist_var("WIMLIB_DELETE_FLAG_RECURSIVE")
        .whitelist_var("WIMLIB_EXPORT_FLAG_BOOT")
        .whitelist_var("WIMLIB_EXPORT_FLAG_NO_NAMES")
        .whitelist_var("WIMLIB_EXPORT_FLAG_NO_DESCRIPTIONS")
        .whitelist_var("WIMLIB_EXPORT_FLAG_GIFT")
        .whitelist_var("WIMLIB_EXPORT_FLAG_WIMBOOT")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_NTFS")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_UNIX_DATA")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_NO_ACLS")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_STRICT_ACLS")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_RPFIX")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_NORPFIX")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_TO_STDOUT")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_REPLACE_INVALID_FILENAMES")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_ALL_CASE_CONFLICTS")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_STRICT_TIMESTAMPS")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_STRICT_SHORT_NAMES")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_STRICT_SYMLINKS")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_GLOB_PATHS")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_STRICT_GLOB")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_NO_ATTRIBUTES")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_NO_PRESERVE_DIR_STRUCTURE")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_WIMBOOT")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_COMPACT_XPRESS4K")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_COMPACT_XPRESS8K")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_COMPACT_XPRESS16K")
        .whitelist_var("WIMLIB_EXTRACT_FLAG_COMPACT_LZX")
        .whitelist_var("WIMLIB_MOUNT_FLAG_READWRITE")
        .whitelist_var("WIMLIB_MOUNT_FLAG_DEBUG")
        .whitelist_var("WIMLIB_MOUNT_FLAG_STREAM_INTERFACE_NONE")
        .whitelist_var("WIMLIB_MOUNT_FLAG_STREAM_INTERFACE_XATTR")
        .whitelist_var("WIMLIB_MOUNT_FLAG_STREAM_INTERFACE_WINDOWS")
        .whitelist_var("WIMLIB_MOUNT_FLAG_UNIX_DATA")
        .whitelist_var("WIMLIB_MOUNT_FLAG_ALLOW_OTHER")
        .whitelist_var("WIMLIB_OPEN_FLAG_CHECK_INTEGRITY")
        .whitelist_var("WIMLIB_OPEN_FLAG_ERROR_IF_SPLIT")
        .whitelist_var("WIMLIB_OPEN_FLAG_WRITE_ACCESS")
        .whitelist_var("WIMLIB_UNMOUNT_FLAG_CHECK_INTEGRITY")
        .whitelist_var("WIMLIB_UNMOUNT_FLAG_COMMIT")
        .whitelist_var("WIMLIB_UNMOUNT_FLAG_REBUILD")
        .whitelist_var("WIMLIB_UNMOUNT_FLAG_RECOMPRESS")
        .whitelist_var("WIMLIB_UNMOUNT_FLAG_FORCE")
        .whitelist_var("WIMLIB_UNMOUNT_FLAG_NEW_IMAGE")
        .whitelist_var("WIMLIB_UPDATE_FLAG_SEND_PROGRESS")
        .whitelist_var("WIMLIB_WRITE_FLAG_CHECK_INTEGRITY")
        .whitelist_var("WIMLIB_WRITE_FLAG_NO_CHECK_INTEGRITY")
        .whitelist_var("WIMLIB_WRITE_FLAG_PIPABLE")
        .whitelist_var("WIMLIB_WRITE_FLAG_NOT_PIPABLE")
        .whitelist_var("WIMLIB_WRITE_FLAG_RECOMPRESS")
        .whitelist_var("WIMLIB_WRITE_FLAG_FSYNC")
        .whitelist_var("WIMLIB_WRITE_FLAG_REBUILD")
        .whitelist_var("WIMLIB_WRITE_FLAG_SOFT_DELETE")
        .whitelist_var("WIMLIB_WRITE_FLAG_IGNORE_READONLY_FLAG")
        .whitelist_var("WIMLIB_WRITE_FLAG_SKIP_EXTERNAL_WIMS")
        .whitelist_var("WIMLIB_WRITE_FLAG_STREAMS_OK")
        .whitelist_var("WIMLIB_WRITE_FLAG_RETAIN_GUID")
        .whitelist_var("WIMLIB_WRITE_FLAG_SOLID")
        .whitelist_var("WIMLIB_WRITE_FLAG_SEND_DONE_WITH_FILE_MESSAGES")
        .whitelist_var("WIMLIB_WRITE_FLAG_NO_SOLID_SORT")
        .whitelist_var("WIMLIB_WRITE_FLAG_UNSAFE_COMPACT")
        .whitelist_var("WIMLIB_INIT_FLAG_ASSUME_UTF8")
        .whitelist_var("WIMLIB_INIT_FLAG_DONT_ACQUIRE_PRIVILEGES")
        .whitelist_var("WIMLIB_INIT_FLAG_STRICT_CAPTURE_PRIVILEGES")
        .whitelist_var("WIMLIB_INIT_FLAG_STRICT_APPLY_PRIVILEGES")
        .whitelist_var("WIMLIB_INIT_FLAG_DEFAULT_CASE_SENSITIVE")
        .whitelist_var("WIMLIB_INIT_FLAG_DEFAULT_CASE_INSENSITIVE")
        .whitelist_var("WIMLIB_REF_FLAG_GLOB_ENABLE")
        .whitelist_var("WIMLIB_REF_FLAG_GLOB_ERR_ON_NOMATCH")
        // nocopy for handles
        .no_copy("WIMStruct")
        // enum translation settings
        .rustified_enum("wimlib_compression_type")
        .rustified_enum("wimlib_progress_msg")
        .rustified_enum("wimlib_progress_status")
        .rustified_enum("wimlib_update_op")
        .rustified_enum("wimlib_error_code")
        // Finish the builder and generate the bindings.
        .generate()
        // Unwrap the Result and panic on failure.
        .expect("Unable to generate bindings");

    // Write the bindings to the $OUT_DIR/bindings.rs file.
    let out_path = PathBuf::from(env::var("OUT_DIR").unwrap());
    bindings
        .write_to_file(out_path.join("bindings.rs"))
        .expect("Couldn't write bindings!");
}
